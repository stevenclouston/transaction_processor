q
@transactions
transactions_database
c
q
c
slip.transactions
number_transactions
q
slip.shop_id
slip
c
q
slips = SlipsDatabase.new(params[:slips])
q
c
params[1][:shop]
params[1]
params[1][:shop_id]
@shop_id
c
q
slip.shop_id
slip.transactions
slip.transactiona
slip.transaction
slip.id
slip
c
q
c
q
@all[slip_id]
slip_id
slipid
@all[23]
@all
@all[:slip_id]
c
x
slip_id
@all[23]
slip_id
@all
@all[:slip_id]
@all[:slip_id].transaction
slip_id
c
q
c
q
slip_id
c
slip_id
c
q
c
slip.id
slip
c
q
c
q
cc
c
@slips.ids
c
@slips
@slips.ids
q
@all.map{|id| id.id}
cc
c
@all.map{|s| s[0]}
@all.map{|s| s[0]
@all.map{|id| id.id}
@all.map{|id| id}
@all
ids
c
q
@slips.all.map { |u| [u[1]}
@slips.all.map { |u| [u[2]]}
@slips.all.map { |u| [u[1]]}
@slips.all.map { |u| [u[1]}
@slips.all.map { |u| [u[2]}
@slips.all.map { |u| [u[2] }
@slips.all.map { |u| [u] }
@slips.all
@slips.all.map { |u| [u.id] }
@slip.all.map { |u| [u.id] }
@slips.all[42]
@slips.all
@slips.all.map{ |o| puts o.class }
@slips.all.map{ |o| puts o }
@slips.all.map{ |o| puts o.id }
 @slips.all.map{ |o| puts o.id }
q
@slips.all.map{ |o| puts o.class }
@slips.all.map{ |o| puts o }
@slips.all.map{ |o| puts o.id }
c
q
c
x
@slips.all.each { |x| puts x.class }
@slips.all.each { |x| puts x }
@slips
@slips.each { |x| puts x }
array.each { |x| puts x }@
@slips.all[42].class
@slips.all[42]
@slips.all
@slips.all[23]
@slips.all
c
@slips.all[23].transactions
@slips.all[23]
@slips.all.count
@slips.all
c
@slips.all[23].id
@slips.all[23]
@slips.all[1]
@slips.all
@slips.class
@slips
c
slip[0]
slip[:id]
slip
slip.class
c
q
slip.class
slip.id
slip
slip.transactions
slip
slip.transactions
slip
c
@slips
c
@slips
c
@Slips
c
params[:slips]
params[:transactions]
params
params(:slips)
params
@slips = Slips.new(params[:slipsparams])
@slips = Slips.new(params[:slips])
@transactions = TransactionsDatabase.new(params[:transactions])
c
q
transactions_to_process.all[123].id
transactions_to_process.all[123]
transactions_to_process.all[1]
transactions_to_process.all
transactions_to_process.first
transactions_to_process
c
transactions_to_process.all.first
q
transactions_to_process.all.first.id
transactions_to_process.all.first
transactions_to_process.all
c
Shops.new(params[:store_database])
c
q
coding_challenge.shops
 coding_challenge = CodingChallenge.new
q
params[:shops]
Shops.new(params[:shops])
Transactions.new(params[:transactions])
Slips.new(params[:slips])
c
q
c
coding_challenge.slips
coding_challenge = CodingChallenge.new
q
y
yq
y
q
params
c
q
Transactions.new(transactions)
c
Transactions.new(transactions)
transactions
Transactions.new(transactions)
Slips.new(slips)
q
x
c
params[:slips].all
params[:slips].class
params[:slips]
params.class
c
online_store_database.class
online_store_database
q
params[:slips]
params[:slips].all
params[:slips]
params
c
slips.all
slips
slips.all
slips
c
online_store_database.all[2].company_name
online_store_database.all[2]
online_store_database.all[1]
online_store_database.all
online_store_database
c
q
@company_name = params[0]
@company_name = params[1]
@company_name = params[1][0]
@company_name = params[0][2]
@company_name = params[0][1]
@company_name = params[0][0]
@company_name = params[0][1]
 @id = params[0][0]
params
c
company_transactions.all[123].amount
company_transactions.all[123].id
company_transactions.all[123]
company_transactions.all[1233]
company_transactions.all[123]
company_transactions.all["123"]
company_transactions.all
company_transactions.all[2]
company_transactions.all.first
company_transactions.all.first.id
company_transactions.all.first
company_transactions.all
company_transactions
c
q
Transactions.new(transactions).transactions
Transactions.new(transactions).transaction
Transactions.new(transactions)
